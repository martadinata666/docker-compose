version: '3.7'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:latest
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  user: 1000:1000
#  expose:
#    - "9000"
#    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
    TZ: Asia/Jakarta
  networks:
    - minio-prod
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3
  deploy:
    placement:
      constraints: [node.role == manager]

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - ./data1/1:/data1
      - ./data1/2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ./data2/1:/data1
      - ./data2/2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - ./data3/1:/data1
      - ./data3/2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - ./data4/1:/data1
      - ./data4/2:/data2

  nginx:
    image: 192.168.0.2:5050/dedyms/nginx:mainline
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "9002:9000"
      - "9003:9001"
    networks:
      - minio-prod
    depends_on:
      - minio1
      - minio2
#      - minio3
#      - minio4
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  minio-prod:
    name: minio-prod
## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
#volumes:
#  data1-1:
#  data1-2:
#  data2-1:
#  data2-2:
#  data3-1:
#  data3-2:
#  data4-1:
#  data4-2:
